name: Build & Publish (Linux Only)

on:
  push:
    paths-ignore:
      - "docfx/**"
    branches: ["main", "dev"]
  pull_request:
    branches: ["main", "dev"]

env:
  BUILD_TYPE: Release

jobs:
  setup:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      buildnumber: ${{ steps.buildnumber.outputs.build_number }}
    steps:
      - name: Generate build number
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        id: buildnumber
        uses: onyxmueller/build-tag-number@v1
        with:
          token: ${{secrets.github_token}}

  build_linux:
    needs: setup
    runs-on: ubuntu-latest
    container:
      image: registry.gitlab.steamos.cloud/steamrt/sniper/sdk:latest
    steps:
      - name: Prepare env
        shell: bash
        run: echo "GITHUB_SHA_SHORT=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Fallback build number
        if: ${{ github.event_name == 'pull_request' || github.ref != 'refs/heads/main' }}
        shell: bash
        run: echo "BUILD_NUMBER=0" >> $GITHUB_ENV

      - name: Main build number
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: echo "BUILD_NUMBER=${{ needs.setup.outputs.buildnumber }}" >> $GITHUB_ENV

      - uses: actions/checkout@v3
        with:
          submodules: "recursive"

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential libssl-dev

      - name: Build with CMake
        run: |
          export CC=clang-15
          export CXX=clang++-15
          mkdir -p build
          cd build
          cmake -G Ninja -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} .. \
          ninja -j16

      - name: Archive build (Linux)
        run: |
          mkdir -p build/output
          mv build/*.so build/output

      - uses: actions/upload-artifact@v3
        with:
          name: cs2surf-linux-${{ env.GITHUB_SHA_SHORT }}
          path: build/output/

  publish:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    needs: ["setup", "build_linux"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: cs2surf-linux-${{ env.GITHUB_SHA_SHORT }}
          path: build/linux

      - name: Zip Build
        run: |
          (cd build/linux && zip -qq -r ../../cs2surf-linux-${{ needs.setup.outputs.buildnumber }}-${{ env.GITHUB_SHA_SHORT }}.zip *)

      - name: Release
        id: release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.setup.outputs.buildnumber }}
          files: |
            cs2surf-linux-${{ needs.setup.outputs.buildnumber }}-${{ env.GITHUB_SHA_SHORT }}.zip
